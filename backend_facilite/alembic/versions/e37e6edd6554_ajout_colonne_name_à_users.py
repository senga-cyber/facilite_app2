"""Ajout colonne name Ã  users

Revision ID: e37e6edd6554
Revises: 
Create Date: 2025-09-10 03:44:35.861810

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e37e6edd6554'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('hotels', sa.Column('owner_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'hotels', 'users', ['owner_id'], ['id'])
    op.alter_column('menus', 'restaurant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('order_items', 'order_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('order_items', 'menu_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('orders', sa.Column('latitude', sa.Float(), nullable=True))
    op.add_column('orders', sa.Column('longitude', sa.Float(), nullable=True))
    op.alter_column('orders', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('orders', 'restaurant_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('orders', 'total',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('payments', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('reservations', sa.Column('latitude', sa.Float(), nullable=True))
    op.add_column('reservations', sa.Column('longitude', sa.Float(), nullable=True))
    op.alter_column('reservations', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('reservations', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('restaurants', sa.Column('owner_id', sa.Integer(), nullable=False))
    op.add_column('restaurants', sa.Column('address', sa.String(), nullable=True))
    op.add_column('restaurants', sa.Column('latitude', sa.Float(), nullable=True))
    op.add_column('restaurants', sa.Column('longitude', sa.Float(), nullable=True))
    op.create_index(op.f('ix_restaurants_name'), 'restaurants', ['name'], unique=False)
    op.create_foreign_key(None, 'restaurants', 'users', ['owner_id'], ['id'])
    op.drop_column('restaurants', 'location')
    op.alter_column('rooms', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('users', sa.Column('name', sa.String(), nullable=False))
    op.add_column('users', sa.Column('phone_number', sa.String(), nullable=False))
    op.add_column('users', sa.Column('role', sa.Enum('client', 'restaurant_manager', 'hotel_manager', 'admin', name='roleenum'), nullable=False))
    op.add_column('users', sa.Column('is_staff', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_constraint(op.f('users_username_key'), 'users', type_='unique')
    op.create_index(op.f('ix_users_phone_number'), 'users', ['phone_number'], unique=True)
    op.create_unique_constraint(None, 'users', ['email'])
    op.drop_column('users', 'username')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_index(op.f('ix_users_phone_number'), table_name='users')
    op.create_unique_constraint(op.f('users_username_key'), 'users', ['username'], postgresql_nulls_not_distinct=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.alter_column('users', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('users', 'created_at')
    op.drop_column('users', 'is_staff')
    op.drop_column('users', 'role')
    op.drop_column('users', 'phone_number')
    op.drop_column('users', 'name')
    op.alter_column('rooms', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.add_column('restaurants', sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'restaurants', type_='foreignkey')
    op.drop_index(op.f('ix_restaurants_name'), table_name='restaurants')
    op.drop_column('restaurants', 'longitude')
    op.drop_column('restaurants', 'latitude')
    op.drop_column('restaurants', 'address')
    op.drop_column('restaurants', 'owner_id')
    op.alter_column('reservations', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('reservations', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('reservations', 'longitude')
    op.drop_column('reservations', 'latitude')
    op.alter_column('payments', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('orders', 'total',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('orders', 'restaurant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('orders', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_column('orders', 'longitude')
    op.drop_column('orders', 'latitude')
    op.alter_column('order_items', 'menu_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('order_items', 'order_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('menus', 'restaurant_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'hotels', type_='foreignkey')
    op.drop_column('hotels', 'owner_id')
    # ### end Alembic commands ###
